from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.exception_factory import VKAPIError
from colorama import init, Fore, Style
init(autoreset=True)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama, —á—Ç–æ–±—ã —Ü–≤–µ—Ç —Å–±—Ä–∞—Å—ã–≤–∞–ª—Å—è –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏



BOT_TOKEN = "vk1.a._jxR-GVP8nf_sbVzF-oJ7c6fX_GtJCtygYo7rWwkKEGV3XBCxwq_M0pIQ58F9sxA9jC0YrNBfEqo88YIfosV6DFP-YNIAsOFBctnvFznBebMvrJJYMEF5g2_sTmftT9FTUVR2SU3QMVCxEc6LpBI3rz2hUX7Dgkawgihj5mBjvnh8VkbAUK056TMQ0KagvNbJ9sx4s7882ArFEzQ20IvvQ"
GROUP_CHAT_ID = 2000000001  # —Å—é–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è

bot = Bot(token=BOT_TOKEN)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
main_keyboard = (
    Keyboard(inline=True)
    .add(Text("–ü—Ä–æ–¥–∞–º"), color=KeyboardButtonColor.POSITIVE)
    .add(Text("–ö—É–ø–ª—é"), color=KeyboardButtonColor.POSITIVE)
    .row()
    .add(Text("–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ"), color=KeyboardButtonColor.SECONDARY)
    .add(Text("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"), color=KeyboardButtonColor.SECONDARY)
)

categories_keyboard = (
    Keyboard(inline=True)
    .add(Text("–ê–≤—Ç–æ–º–æ–±–∏–ª—å"), color=KeyboardButtonColor.PRIMARY)
    .add(Text("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"), color=KeyboardButtonColor.PRIMARY)
    .row()
    .add(Text("–ê–∫—Å–µ—Å—Å—É–∞—Ä"), color=KeyboardButtonColor.PRIMARY)
    .add(Text("–ë–∏–∑–Ω–µ—Å"), color=KeyboardButtonColor.PRIMARY)
    .row()
    .add(Text("–û—Ç–º–µ–Ω–∞"), color=KeyboardButtonColor.NEGATIVE)
)

real_estate_keyboard = (
    Keyboard(inline=True)
    .add(Text("–î–æ–º"), color=KeyboardButtonColor.PRIMARY)
    .add(Text("–ö–≤–∞—Ä—Ç–∏—Ä–∞"), color=KeyboardButtonColor.PRIMARY)
    .row()
    .add(Text("–ë–∏–∑–Ω–µ—Å-–æ–±—ä–µ–∫—Ç"), color=KeyboardButtonColor.PRIMARY)
    .row()
    .add(Text("–ù–∞–∑–∞–¥"), color=KeyboardButtonColor.NEGATIVE)
)

extra_info_keyboard = (
    Keyboard(inline=True)
    .add(Text("–ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å"), color=KeyboardButtonColor.NEGATIVE)
)

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π ---
user_states = {}

def reset_user_state(user_id: int):
    user_states[user_id] = {
        "action": None,
        "category": None,
        "real_estate_type": None,
        "title": None,
        "price": None,
        "extra_info": None,
        "awaiting_title": False,
        "awaiting_price": False,
        "awaiting_extra_info": False
    }

# --- –•—ç–Ω–¥–ª–µ—Ä—ã ---

@bot.on.message(text="/start")
async def start_handler(message: Message):
    reset_user_state(message.from_id)
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –±–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å, –ø–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ —Ö–æ—á–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ê–≥–µ–Ω—Ç–æ–≤ –†–µ–¥–∞–∫—Ü–∏–∏.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞.",
        keyboard=main_keyboard
    )


@bot.on.message(text=["–ü—Ä–æ–¥–∞–º", "–ö—É–ø–ª—é"])
async def action_handler(message: Message):
    user_id = message.from_id
    reset_user_state(user_id)
    user_states[user_id]["action"] = message.text
    await message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {message.text}. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        keyboard=categories_keyboard
    )

@bot.on.message(text="–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")
async def cooperation_handler(message: Message):
    reset_user_state(message.from_id)
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –∂–µ–ª–∞–µ–º–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–æ–Ω–∫—É—Ä—Å–µ –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–º –ø–æ—Å—Ç–µ.\n–û–ø–æ–≤–µ—Å—Ç–∏–ª–∏ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –†–µ–¥–∞–∫—Ü–∏–∏ M19, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.",
    )

@bot.on.message(text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å")
async def editor_handler(message: Message):
    reset_user_state(message.from_id)
    await message.answer(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ú–∞—Ç—Ä–µ—à–∫–æ–π. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç!\n–û–ø–æ–≤–µ—Å—Ç–∏–ª–∏ –ê–≥–µ–Ω—Ç–æ–≤ –†–µ–¥–∞–∫—Ü–∏–∏ –ú19, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.",
    )

@bot.on.message(text="–û—Ç–º–µ–Ω–∞")
async def cancel_handler(message: Message):
    reset_user_state(message.from_id)
    await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", keyboard=main_keyboard)

@bot.on.message(text="–ù–∞–∑–∞–¥")
async def back_handler(message: Message):
    user_id = message.from_id
    state = user_states.get(user_id)
    if state and state["category"] == "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:", keyboard=real_estate_keyboard)
    else:
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", keyboard=main_keyboard)

@bot.on.message(text=["–ê–≤—Ç–æ–º–æ–±–∏–ª—å", "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", "–ê–∫—Å–µ—Å—Å—É–∞—Ä", "–ë–∏–∑–Ω–µ—Å"])
async def category_handler(message: Message):
    user_id = message.from_id
    state = user_states.get(user_id)
    if not state or not state["action"]:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (–ü—Ä–æ–¥–∞–º/–ö—É–ø–ª—é).", keyboard=main_keyboard)
        return

    category = message.text
    user_states[user_id]["category"] = category

    if category == "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:", keyboard=real_estate_keyboard)
    else:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–æ–¥–µ–ª—å –∞–≤—Ç–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞ –∏ —Ç.–¥.):")
        user_states[user_id]["awaiting_title"] = True

@bot.on.message(text=["–î–æ–º", "–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–ë–∏–∑–Ω–µ—Å-–æ–±—ä–µ–∫—Ç"])
async def real_estate_type_handler(message: Message):
    user_id = message.from_id
    user_states[user_id]["real_estate_type"] = message.text
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:")
    user_states[user_id]["awaiting_title"] = True

@bot.on.message(text="–ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å")
async def skip_extra_info_handler(message: Message):
    user_id = message.from_id
    user_states[user_id]["extra_info"] = ""
    user_states[user_id]["awaiting_extra_info"] = False
    await send_announcement(user_id, message)

@bot.on.message()
async def text_handler(message: Message):
    user_id = message.from_id
    state = user_states.get(user_id)

    if not state:
        await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.", keyboard=main_keyboard)
        return

    # –ñ–¥—ë–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    if state.get("awaiting_title"):
        user_states[user_id]["title"] = message.text
        user_states[user_id]["awaiting_title"] = False
        await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É (—Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: 400000):")
        user_states[user_id]["awaiting_price"] = True
        return

    # –ñ–¥—ë–º —Ü–µ–Ω—É
    if state.get("awaiting_price"):
        price_text = message.text.replace(" ", "").replace("–ö", "000").replace("–∫", "000").replace("K", "000").replace("k", "000")
        if not price_text.isdigit():
            await message.answer(
                "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: 400000\n–ï—Å–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–Ω–∞—è, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å –ª—é–±—É—é —Å—É–º–º—É –∏ —É–∫–∞–∂–∏—Ç–µ –≤ –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            )
            return
        user_states[user_id]["price"] = price_text
        user_states[user_id]["awaiting_price"] = False

        if state["category"] != "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å":
            await message.answer(
                "–£–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º):",
                keyboard=extra_info_keyboard
            )
            user_states[user_id]["awaiting_extra_info"] = True
        else:
            # –î–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É (—Ç.–∫. –¥–æ–ø. –∏–Ω—Ñ–æ –ø–æ–∫–∞ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º)
            await send_announcement(user_id, message)
        return

    # –ñ–¥—ë–º –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if state.get("awaiting_extra_info"):
        user_states[user_id]["extra_info"] = message.text
        user_states[user_id]["awaiting_extra_info"] = False
        await send_announcement(user_id, message)
        return

    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.", keyboard=main_keyboard)

# --- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –ª–æ–≤–ª–µ–π –æ—à–∏–±–æ–∫ ---
async def safe_send(peer_id, **kwargs):
    try:
        await bot.api.messages.send(peer_id=peer_id, random_id=0, **kwargs)
    except VKAPIError as e:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É 901 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—Ç–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è
        if e.code == 901:
            print(f"VKAPIError 901: –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer_id}")
        else:
            print(f"VKAPIError {e.code}: {e}")

async def send_announcement(user_id: int, message: Message):
    state = user_states[user_id]

    action = state["action"]
    title = state["title"]
    price = state["price"]
    extra = state.get("extra_info", "").strip()
    category = state["category"]
    real_estate_type = state.get("real_estate_type", "")

    announcement = f"üÜï {action} "

    if category == "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å" and real_estate_type:
        announcement += f"{real_estate_type} ¬´{title}¬ª\n"
    else:
        announcement += f"{category} ¬´{title}¬ª\n"

    announcement += f"\nü™ô –¶–µ–Ω–∞ - {price}\n"

    if extra and extra.lower() != "–Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å":
        announcement += f"\n‚Ñπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {extra}\n"

    announcement += f"\nüìû –°–≤—è–∑—å - https://vk.com/id{user_id}"

    await safe_send(
        peer_id=GROUP_CHAT_ID,
        message=announcement,
        keyboard=main_keyboard.get_json()  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ json
    )
    await message.answer("–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ.", keyboard=main_keyboard)
    reset_user_state(user_id)

if __name__ == "__main__":
    print(Fore.GREEN + f"–ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
    bot.run_forever()
